{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Siddhi IO Email The siddhi-io-email extension is an extension to Siddhi that receives and publishes events via email using SMTP, POP3 and IMAP protocols. For information on Siddhi and it's features refer Siddhi Documentation . Download Versions 2.x and above with group id io.siddhi.extension.* from here . Versions 1.x and lower with group id org.wso2.extension.siddhi.* from here . Latest API Docs Latest API Docs is 2.0.8 . Features email ( Sink ) The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. email ( Source ) The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. JavaMail Reference Implementation - IMAP Store JavaMail Reference Implementation - POP3 Store Store Dependencies There are no other dependencies needed for this extension. Installation For installing this extension on various siddhi execution environments refer Siddhi documentation section on adding extensions . Support and Contribution We encourage users to ask questions and get support via StackOverflow , make sure to add the siddhi tag to the issue for better response. If you find any issues related to the extension please report them on the issue tracker . For production support and other contribution related information refer Siddhi Community documentation.","title":"Information"},{"location":"#siddhi-io-email","text":"The siddhi-io-email extension is an extension to Siddhi that receives and publishes events via email using SMTP, POP3 and IMAP protocols. For information on Siddhi and it's features refer Siddhi Documentation .","title":"Siddhi IO Email"},{"location":"#download","text":"Versions 2.x and above with group id io.siddhi.extension.* from here . Versions 1.x and lower with group id org.wso2.extension.siddhi.* from here .","title":"Download"},{"location":"#latest-api-docs","text":"Latest API Docs is 2.0.8 .","title":"Latest API Docs"},{"location":"#features","text":"email ( Sink ) The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. email ( Source ) The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. JavaMail Reference Implementation - IMAP Store JavaMail Reference Implementation - POP3 Store Store","title":"Features"},{"location":"#dependencies","text":"There are no other dependencies needed for this extension.","title":"Dependencies"},{"location":"#installation","text":"For installing this extension on various siddhi execution environments refer Siddhi documentation section on adding extensions .","title":"Installation"},{"location":"#support-and-contribution","text":"We encourage users to ask questions and get support via StackOverflow , make sure to add the siddhi tag to the issue for better response. If you find any issues related to the extension please report them on the issue tracker . For production support and other contribution related information refer Siddhi Community documentation.","title":"Support and Contribution"},{"location":"license/","text":"Copyright (c) 2019 WSO2 Inc. ( http://www.wso2.org ) All Rights Reserved. WSO2 Inc. licenses this file to you under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. ------------------------------------------------------------------------- Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. License shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. Licensor shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. Legal Entity shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, control means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. You (or Your ) shall mean an individual or Legal Entity exercising permissions granted by this License. Source form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. Object form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. Work shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). Derivative Works shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. Contribution shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, submitted means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as Not a Contribution. Contributor shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a NOTICE text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS","title":"License"},{"location":"api/1.0.0/","text":"API Docs - v1.0.0 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type='json'), username='wso2', address='wso2@gmail.com',password='wso234',host='smtp.gmail.com',subject='Event from SP',to='towso2@gmail.com ,wso2two@gmail.com',cc='ccwso2@gmail.com')define stream inputStream (name string, age int, country string); Following example illustrates how to publish a event using email sink. As in the example, it publishes events come from the inputStream in json format through email to given 'to' and 'cc' recipients.The email is sent through wso2@gmail.com email account via secure connection. Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. None Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Depends on the certificate the server presents Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='wso2mail', password='wso2Password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:das, from: wso2one@ , cc: wso2two, polling.interval='50000',action.after.processed='SEEN',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in 'xml' format using email source. The email source polls the mail account in every 50 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term. In the example action after processes is defined as the 'SEEN', so that after processing the event, corresponding mail is mark as read.","title":"1.0.0"},{"location":"api/1.0.0/#api-docs-v100","text":"","title":"API Docs - v1.0.0"},{"location":"api/1.0.0/#sink","text":"","title":"Sink"},{"location":"api/1.0.0/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type='json'), username='wso2', address='wso2@gmail.com',password='wso234',host='smtp.gmail.com',subject='Event from SP',to='towso2@gmail.com ,wso2two@gmail.com',cc='ccwso2@gmail.com')define stream inputStream (name string, age int, country string); Following example illustrates how to publish a event using email sink. As in the example, it publishes events come from the inputStream in json format through email to given 'to' and 'cc' recipients.The email is sent through wso2@gmail.com email account via secure connection.","title":"email (Sink)"},{"location":"api/1.0.0/#source","text":"","title":"Source"},{"location":"api/1.0.0/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. None Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Depends on the certificate the server presents Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='wso2mail', password='wso2Password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:das, from: wso2one@ , cc: wso2two, polling.interval='50000',action.after.processed='SEEN',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in 'xml' format using email source. The email source polls the mail account in every 50 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term. In the example action after processes is defined as the 'SEEN', so that after processing the event, corresponding mail is mark as read.","title":"email (Source)"},{"location":"api/1.0.1/","text":"API Docs - v1.0.1 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' (For gmail account you can enable it via https://myaccount.google.com/lesssecureapps.) Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 define stream fooStream (email string, loginId int, name string);@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',) Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients.The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 define stream fooStream (name string, age int, country string);@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com) Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. None Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Depends on the certificate the server presents Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.1"},{"location":"api/1.0.1/#api-docs-v101","text":"","title":"API Docs - v1.0.1"},{"location":"api/1.0.1/#sink","text":"","title":"Sink"},{"location":"api/1.0.1/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' (For gmail account you can enable it via https://myaccount.google.com/lesssecureapps.) Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 define stream fooStream (email string, loginId int, name string);@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',) Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients.The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 define stream fooStream (name string, age int, country string);@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com) Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event","title":"email (Sink)"},{"location":"api/1.0.1/#source","text":"","title":"Source"},{"location":"api/1.0.1/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. None Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Depends on the certificate the server presents Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.10/","text":"API Docs - v1.0.10 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.10"},{"location":"api/1.0.10/#api-docs-v1010","text":"","title":"API Docs - v1.0.10"},{"location":"api/1.0.10/#sink","text":"","title":"Sink"},{"location":"api/1.0.10/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event","title":"email (Sink)"},{"location":"api/1.0.10/#source","text":"","title":"Source"},{"location":"api/1.0.10/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.11/","text":"API Docs - v1.0.11 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.11"},{"location":"api/1.0.11/#api-docs-v1011","text":"","title":"API Docs - v1.0.11"},{"location":"api/1.0.11/#sink","text":"","title":"Sink"},{"location":"api/1.0.11/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event","title":"email (Sink)"},{"location":"api/1.0.11/#source","text":"","title":"Source"},{"location":"api/1.0.11/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.12/","text":"API Docs - v1.0.12 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.12"},{"location":"api/1.0.12/#api-docs-v1012","text":"","title":"API Docs - v1.0.12"},{"location":"api/1.0.12/#sink","text":"","title":"Sink"},{"location":"api/1.0.12/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event","title":"email (Sink)"},{"location":"api/1.0.12/#source","text":"","title":"Source"},{"location":"api/1.0.12/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.13/","text":"API Docs - v1.0.13 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Above example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Above example illustrates how to configure the query parameters and system parameters in the 'deployment.ymal' file of WSO2 Stream Processor. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Above example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Above example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Above example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.13"},{"location":"api/1.0.13/#api-docs-v1013","text":"","title":"API Docs - v1.0.13"},{"location":"api/1.0.13/#sink","text":"","title":"Sink"},{"location":"api/1.0.13/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Above example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Above example illustrates how to configure the query parameters and system parameters in the 'deployment.ymal' file of WSO2 Stream Processor. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Above example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event","title":"email (Sink)"},{"location":"api/1.0.13/#source","text":"","title":"Source"},{"location":"api/1.0.13/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Above example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Above example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.14/","text":"API Docs - v1.0.14 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Above example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Above example illustrates how to configure the query parameters and system parameters in the 'deployment.ymal' file of WSO2 Stream Processor. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Above example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Above example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Above example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.14"},{"location":"api/1.0.14/#api-docs-v1014","text":"","title":"API Docs - v1.0.14"},{"location":"api/1.0.14/#sink","text":"","title":"Sink"},{"location":"api/1.0.14/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Above example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Above example illustrates how to configure the query parameters and system parameters in the 'deployment.ymal' file of WSO2 Stream Processor. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Above example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event","title":"email (Sink)"},{"location":"api/1.0.14/#source","text":"","title":"Source"},{"location":"api/1.0.14/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Above example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Above example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.15/","text":"API Docs - v1.0.15 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No attachments File paths of the files that needs to be attached to the email. These paths should be absolute paths. They can be either a directories or files. If it's a directory all the files inside that directory will be attached. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string); Following example illustrates how to publish events using theemail sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event. Also to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached. Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.15"},{"location":"api/1.0.15/#api-docs-v1015","text":"","title":"API Docs - v1.0.15"},{"location":"api/1.0.15/#sink","text":"","title":"Sink"},{"location":"api/1.0.15/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No attachments File paths of the files that needs to be attached to the email. These paths should be absolute paths. They can be either a directories or files. If it's a directory all the files inside that directory will be attached. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string); Following example illustrates how to publish events using theemail sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event. Also to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached.","title":"email (Sink)"},{"location":"api/1.0.15/#source","text":"","title":"Source"},{"location":"api/1.0.15/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.16/","text":"API Docs - v1.0.16 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No attachments File paths of the files that needs to be attached to the email. These paths should be absolute paths. They can be either a directories or files . If it's a directory, all the files at its first level will be attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string); Following example illustrates how to publish events using theemail sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event. Also to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached. Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.16"},{"location":"api/1.0.16/#api-docs-v1016","text":"","title":"API Docs - v1.0.16"},{"location":"api/1.0.16/#sink","text":"","title":"Sink"},{"location":"api/1.0.16/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No attachments File paths of the files that needs to be attached to the email. These paths should be absolute paths. They can be either a directories or files . If it's a directory, all the files at its first level will be attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string); Following example illustrates how to publish events using theemail sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event. Also to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached.","title":"email (Sink)"},{"location":"api/1.0.16/#source","text":"","title":"Source"},{"location":"api/1.0.16/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.17/","text":"API Docs - v1.0.17 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No attachments File paths of the files that needs to be attached to the email. These paths should be absolute paths. They can be either a directories or files . If it's a directory, all the files at its first level will be attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string); Following example illustrates how to publish events using theemail sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event. Also to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached. Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.17"},{"location":"api/1.0.17/#api-docs-v1017","text":"","title":"API Docs - v1.0.17"},{"location":"api/1.0.17/#sink","text":"","title":"Sink"},{"location":"api/1.0.17/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No attachments File paths of the files that needs to be attached to the email. These paths should be absolute paths. They can be either a directories or files . If it's a directory, all the files at its first level will be attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string); Following example illustrates how to publish events using theemail sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event. Also to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached.","title":"email (Sink)"},{"location":"api/1.0.17/#source","text":"","title":"Source"},{"location":"api/1.0.17/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.18/","text":"API Docs - v1.0.18 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No attachments File paths of the files that needs to be attached to the email. These paths should be absolute paths. They can be either a directories or files . If it's a directory, all the files at its first level will be attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string); Following example illustrates how to publish events using theemail sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event. Also to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached. Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.18"},{"location":"api/1.0.18/#api-docs-v1018","text":"","title":"API Docs - v1.0.18"},{"location":"api/1.0.18/#sink","text":"","title":"Sink"},{"location":"api/1.0.18/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No attachments File paths of the files that needs to be attached to the email. These paths should be absolute paths. They can be either a directories or files . If it's a directory, all the files at its first level will be attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string); Following example illustrates how to publish events using theemail sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event. Also to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached.","title":"email (Sink)"},{"location":"api/1.0.18/#source","text":"","title":"Source"},{"location":"api/1.0.18/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.19/","text":"API Docs - v1.0.19 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No attachments File paths of the files that needs to be attached to the email. These paths should be absolute paths. They can be either directories or files . If it's a directory, all the files at its first level will be attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string); Following example illustrates how to publish events using the email sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event. Also to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached. Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.19"},{"location":"api/1.0.19/#api-docs-v1019","text":"","title":"API Docs - v1.0.19"},{"location":"api/1.0.19/#sink","text":"","title":"Sink"},{"location":"api/1.0.19/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No attachments File paths of the files that needs to be attached to the email. These paths should be absolute paths. They can be either directories or files . If it's a directory, all the files at its first level will be attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string); Following example illustrates how to publish events using the email sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event. Also to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached.","title":"email (Sink)"},{"location":"api/1.0.19/#source","text":"","title":"Source"},{"location":"api/1.0.19/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.2/","text":"API Docs - v1.0.2 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. None Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Depends on the certificate the server presents Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.2"},{"location":"api/1.0.2/#api-docs-v102","text":"","title":"API Docs - v1.0.2"},{"location":"api/1.0.2/#sink","text":"","title":"Sink"},{"location":"api/1.0.2/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event","title":"email (Sink)"},{"location":"api/1.0.2/#source","text":"","title":"Source"},{"location":"api/1.0.2/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. None Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Depends on the certificate the server presents Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.20/","text":"API Docs - v1.0.20 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No attachments File paths of the files that needs to be attached to the email. These paths should be absolute paths. They can be either directories or files . If it's a directory, all the files at its first level will be attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string); Following example illustrates how to publish events using the email sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event. Also to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached. Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.20"},{"location":"api/1.0.20/#api-docs-v1020","text":"","title":"API Docs - v1.0.20"},{"location":"api/1.0.20/#sink","text":"","title":"Sink"},{"location":"api/1.0.20/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No attachments File paths of the files that needs to be attached to the email. These paths should be absolute paths. They can be either directories or files . If it's a directory, all the files at its first level will be attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string); Following example illustrates how to publish events using the email sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event. Also to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached.","title":"email (Sink)"},{"location":"api/1.0.20/#source","text":"","title":"Source"},{"location":"api/1.0.20/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.21/","text":"API Docs - v1.0.21 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No attachments File paths of the files that needs to be attached to the email. These paths should be absolute paths. They can be either directories or files . If it's a directory, all the files at its first level will be attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string); Following example illustrates how to publish events using the email sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event. Also to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached. Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.21"},{"location":"api/1.0.21/#api-docs-v1021","text":"","title":"API Docs - v1.0.21"},{"location":"api/1.0.21/#sink","text":"","title":"Sink"},{"location":"api/1.0.21/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No attachments File paths of the files that needs to be attached to the email. These paths should be absolute paths. They can be either directories or files . If it's a directory, all the files at its first level will be attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string); Following example illustrates how to publish events using the email sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event. Also to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached.","title":"email (Sink)"},{"location":"api/1.0.21/#source","text":"","title":"Source"},{"location":"api/1.0.21/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.22/","text":"API Docs - v1.0.22 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No attachments File paths of the files that needs to be attached to the email. These paths should be absolute paths. They can be either directories or files . If it's a directory, all the files at its first level will be attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string); Following example illustrates how to publish events using the email sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event. Also to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached. Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.22"},{"location":"api/1.0.22/#api-docs-v1022","text":"","title":"API Docs - v1.0.22"},{"location":"api/1.0.22/#sink","text":"","title":"Sink"},{"location":"api/1.0.22/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No attachments File paths of the files that needs to be attached to the email. These paths should be absolute paths. They can be either directories or files . If it's a directory, all the files at its first level will be attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string); Following example illustrates how to publish events using the email sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event. Also to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached.","title":"email (Sink)"},{"location":"api/1.0.22/#source","text":"","title":"Source"},{"location":"api/1.0.22/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.23/","text":"API Docs - v1.0.23 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No attachments File paths of the files that needs to be attached to the email. These paths should be absolute paths. They can be either directories or files . If it's a directory, all the files at its first level will be attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string); Following example illustrates how to publish events using the email sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event. Also to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached. Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.23"},{"location":"api/1.0.23/#api-docs-v1023","text":"","title":"API Docs - v1.0.23"},{"location":"api/1.0.23/#sink","text":"","title":"Sink"},{"location":"api/1.0.23/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No attachments File paths of the files that needs to be attached to the email. These paths should be absolute paths. They can be either directories or files . If it's a directory, all the files at its first level will be attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string); Following example illustrates how to publish events using the email sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event. Also to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached.","title":"email (Sink)"},{"location":"api/1.0.23/#source","text":"","title":"Source"},{"location":"api/1.0.23/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.24/","text":"API Docs - v1.0.24 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No attachments File paths of the files that needs to be attached to the email. These paths should be absolute paths. They can be either directories or files . If it's a directory, all the files at its first level will be attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string); Following example illustrates how to publish events using the email sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event. Also to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached. Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.24"},{"location":"api/1.0.24/#api-docs-v1024","text":"","title":"API Docs - v1.0.24"},{"location":"api/1.0.24/#sink","text":"","title":"Sink"},{"location":"api/1.0.24/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No attachments File paths of the files that needs to be attached to the email. These paths should be absolute paths. They can be either directories or files . If it's a directory, all the files at its first level will be attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string); Following example illustrates how to publish events using the email sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event. Also to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached.","title":"email (Sink)"},{"location":"api/1.0.24/#source","text":"","title":"Source"},{"location":"api/1.0.24/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.25/","text":"API Docs - v1.0.25 Sink email (Sink) The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute. Source email (Source) The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. [JavaMail Reference Implementation - IMAP Store](https://javaee.github.io/javamail/IMAP-Store) [JavaMail Reference Implementation - POP3 Store Store](https://javaee.github.io/javamail/POP3-Store) Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.25"},{"location":"api/1.0.25/#api-docs-v1025","text":"","title":"API Docs - v1.0.25"},{"location":"api/1.0.25/#sink","text":"","title":"Sink"},{"location":"api/1.0.25/#email-sink","text":"The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute.","title":"email (Sink)"},{"location":"api/1.0.25/#source","text":"","title":"Source"},{"location":"api/1.0.25/#email-source","text":"The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. [JavaMail Reference Implementation - IMAP Store](https://javaee.github.io/javamail/IMAP-Store) [JavaMail Reference Implementation - POP3 Store Store](https://javaee.github.io/javamail/POP3-Store) Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.3/","text":"API Docs - v1.0.3 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. None Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Depends on the certificate the server presents Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.3"},{"location":"api/1.0.3/#api-docs-v103","text":"","title":"API Docs - v1.0.3"},{"location":"api/1.0.3/#sink","text":"","title":"Sink"},{"location":"api/1.0.3/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event","title":"email (Sink)"},{"location":"api/1.0.3/#source","text":"","title":"Source"},{"location":"api/1.0.3/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. None Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Depends on the certificate the server presents Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.4/","text":"API Docs - v1.0.4 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. None Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Depends on the certificate the server presents Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.4"},{"location":"api/1.0.4/#api-docs-v104","text":"","title":"API Docs - v1.0.4"},{"location":"api/1.0.4/#sink","text":"","title":"Sink"},{"location":"api/1.0.4/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event","title":"email (Sink)"},{"location":"api/1.0.4/#source","text":"","title":"Source"},{"location":"api/1.0.4/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. None Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Depends on the certificate the server presents Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.5/","text":"API Docs - v1.0.5 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. None Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Depends on the certificate the server presents Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.5"},{"location":"api/1.0.5/#api-docs-v105","text":"","title":"API Docs - v1.0.5"},{"location":"api/1.0.5/#sink","text":"","title":"Sink"},{"location":"api/1.0.5/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event","title":"email (Sink)"},{"location":"api/1.0.5/#source","text":"","title":"Source"},{"location":"api/1.0.5/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. None Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Depends on the certificate the server presents Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.6/","text":"API Docs - v1.0.6 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. None Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Depends on the certificate the server presents Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.6"},{"location":"api/1.0.6/#api-docs-v106","text":"","title":"API Docs - v1.0.6"},{"location":"api/1.0.6/#sink","text":"","title":"Sink"},{"location":"api/1.0.6/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event","title":"email (Sink)"},{"location":"api/1.0.6/#source","text":"","title":"Source"},{"location":"api/1.0.6/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. None Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Depends on the certificate the server presents Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.7/","text":"API Docs - v1.0.7 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. None Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Depends on the certificate the server presents Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.7"},{"location":"api/1.0.7/#api-docs-v107","text":"","title":"API Docs - v1.0.7"},{"location":"api/1.0.7/#sink","text":"","title":"Sink"},{"location":"api/1.0.7/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event","title":"email (Sink)"},{"location":"api/1.0.7/#source","text":"","title":"Source"},{"location":"api/1.0.7/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. None Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Depends on the certificate the server presents Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.8/","text":"API Docs - v1.0.8 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.8"},{"location":"api/1.0.8/#api-docs-v108","text":"","title":"API Docs - v1.0.8"},{"location":"api/1.0.8/#sink","text":"","title":"Sink"},{"location":"api/1.0.8/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event","title":"email (Sink)"},{"location":"api/1.0.8/#source","text":"","title":"Source"},{"location":"api/1.0.8/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.0.9/","text":"API Docs - v1.0.9 Sink email (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event Source email (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"1.0.9"},{"location":"api/1.0.9/#api-docs-v109","text":"","title":"API Docs - v1.0.9"},{"location":"api/1.0.9/#sink","text":"","title":"Sink"},{"location":"api/1.0.9/#email-sink","text":"The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps). Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). STRING No No address Address of the email account which is used to send emails. STRING No No password Password of the email account. STRING No No host Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. smtp.gmail.com STRING Yes No port The port which is used to create the connection. '465' the default value is only valid is ssl enable INT Yes No ssl.enable Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. true BOOL Yes No auth Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. true BOOL Yes No content.type Content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject Subject of the mail which has to be send. STRING No Yes to Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. STRING No Yes cc Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. None STRING Yes No bcc Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. None STRING Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. String mail.smtp.connectiontimeout Socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout Socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Valid email address mail.smtp.localport Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If false, do not attempt to sign on with the EHLO command. true true or false mail.smtp.auth.login.disable If true, prevents use of the AUTH LOGIN command. false true or false mail.smtp.auth.plain.disable If true, prevents use of the AUTH PLAIN command. false true or false mail.smtp.auth.digest-md5.disable If true, prevents use of the AUTH DIGEST-MD5 command. false true or false mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None Valid NTLM authentication domain name mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). mail.smtp.dsn.ret The RET option to the MAIL command. None Either FULL or HDRS. mail.smtp.sendpartial If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. false true or false mail.smtp.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.smtp.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None mail.smtp.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. username Valid ID mail.smtp.sasl.realm The realm to use with DIGEST-MD5 authentication. None mail.smtp.quitwait If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. false true or false mail.smtp.reportsuccess If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. false true or false mail.smtp.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. None mail.smtp.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.smtp.socketFactory.port Specifies the port to connect to when using the specified socket factory 25 Valid port number mail.smtp.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. None The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. mail.smtp.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. false true or false mail.smtp.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None mail.smtp.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If true, prevents use of the AUTH NTLM command false true or false mail.smtp.mailextension Extension string to append to the MAIL command. None mail.smtp.userset If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string); Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string); Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given to , cc and bcc recipients using a secure connection. name in the subject attribute will be the value of the name parameter in the corresponding output event","title":"email (Sink)"},{"location":"api/1.0.9/#source","text":"","title":"Source"},{"location":"api/1.0.9/#email-source","text":"Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store , https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters). Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. STRING No No password password of the email account STRING No No store Store type that used to receive emails. it can be either imap or pop3. imap STRING Yes No host Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. STRING Yes No port The port which is used to create the connection. '993' the default value is valid only if store is imap and ssl enable INT Yes No folder Name of the folder to fetch email. INBOX STRING Yes No search.term Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. None STRING Yes No polling.interval Interval that email source should poll the account to check for new mails arrivals in seconds. 600 LONG Yes No action.after.processed Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE NONE STRING Yes No folder.to.move The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. STRING No No content.type Content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch Controls whether the IMAP partial-fetch capability should be used true true or false mail.imap.fetchsize Partial fetch size in bytes. 16K value in bytes mail.imap.peek If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. false true or false mail.imap.connectiontimeout Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.timeout Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. infinity timeout Any Integer value mail.imap.writetimeout Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout Timeout value in milliseconds for cache of STATUS command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize Maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize Maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout Timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection Flag to indicate whether to use a dedicated store connection for store commands. true true or false mail.imap.auth.login.disable If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. false true or false mail.imap.auth.plain.disable If true, prevents use of the AUTHENTICATE PLAIN command. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. None Valid string value mail.imap.localaddress Local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport Local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. false true or false mail.imap.sasl.mechanisms A space or comma separated list of SASL mechanism names to try to use. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. true true or false mail.imap.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port is used when not set. 143 Valid Integer mail.imap.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.imap.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port Specifies the port to connect to when using the specified socket factory. the default port will be used-993 valid port number mail.imap.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid string mail.imap.starttls.enable If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.imap.socks.port Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. false true or false mail.imap.folder.class Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout Socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout Socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class Class name of a subclass of com.sun.mail.pop3.POP3Message None Valid String mail.pop3.localaddress Local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport Local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. false true or false mail.pop3.socketFactory If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. None Socket Factory mail.pop3.socketFactory.class If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. None Valid String mail.pop3.socketFactory.fallback If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. false true or false mail.pop3.socketFactory.port Specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If set to true, check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. trust depends on the certificate the server presents. Valid String mail.pop3.ssl.socketFactory If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. None Valid String mail.pop3.ssl.socketFactory.p Specifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. None Valid String mail.pop3.starttls.enable If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands false true or false mail.pop3.starttls.required If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. false true or false mail.pop3.socks.host Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. None Valid String mail.pop3.socks.port Specifies the port number for the SOCKS5 proxy server. None Valid String mail.pop3.disabletop If set to true, the POP3 TOP command will not be used to fetch message headers. false true or false mail.pop3.forgettopheaders If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. false true or false mail.pop3.filecache.enable If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. In this example only mandatory parameters are defined in the in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); Following example illustrates how to receive events in xml format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains cc.account in cc receipts list, and Stream Processor words in the mail subject) In the example, action after processes is defined as the DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.1.0/","text":"API Docs - v1.1.0 Sink email (Sink) The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute. Source email (Source) The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. [JavaMail Reference Implementation - IMAP Store](https://javaee.github.io/javamail/IMAP-Store) [JavaMail Reference Implementation - POP3 Store Store](https://javaee.github.io/javamail/POP3-Store) Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"1.1.0"},{"location":"api/1.1.0/#api-docs-v110","text":"","title":"API Docs - v1.1.0"},{"location":"api/1.1.0/#sink","text":"","title":"Sink"},{"location":"api/1.1.0/#email-sink","text":"The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute.","title":"email (Sink)"},{"location":"api/1.1.0/#source","text":"","title":"Source"},{"location":"api/1.1.0/#email-source","text":"The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. [JavaMail Reference Implementation - IMAP Store](https://javaee.github.io/javamail/IMAP-Store) [JavaMail Reference Implementation - POP3 Store Store](https://javaee.github.io/javamail/POP3-Store) Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/1.1.1/","text":"API Docs - v1.1.1 Sink email (Sink) The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute. Source email (Source) The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. [JavaMail Reference Implementation - IMAP Store](https://javaee.github.io/javamail/IMAP-Store) [JavaMail Reference Implementation - POP3 Store Store](https://javaee.github.io/javamail/POP3-Store) Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"1.1.1"},{"location":"api/1.1.1/#api-docs-v111","text":"","title":"API Docs - v1.1.1"},{"location":"api/1.1.1/#sink","text":"","title":"Sink"},{"location":"api/1.1.1/#email-sink","text":"The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute.","title":"email (Sink)"},{"location":"api/1.1.1/#source","text":"","title":"Source"},{"location":"api/1.1.1/#email-source","text":"The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. [JavaMail Reference Implementation - IMAP Store](https://javaee.github.io/javamail/IMAP-Store) [JavaMail Reference Implementation - POP3 Store Store](https://javaee.github.io/javamail/POP3-Store) Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/2.0.0/","text":"API Docs - v2.0.0 Sink email (Sink) The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute. Source email (Source) The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. [JavaMail Reference Implementation - IMAP Store](https://javaee.github.io/javamail/IMAP-Store) [JavaMail Reference Implementation - POP3 Store Store](https://javaee.github.io/javamail/POP3-Store) Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"2.0.0"},{"location":"api/2.0.0/#api-docs-v200","text":"","title":"API Docs - v2.0.0"},{"location":"api/2.0.0/#sink","text":"","title":"Sink"},{"location":"api/2.0.0/#email-sink","text":"The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute.","title":"email (Sink)"},{"location":"api/2.0.0/#source","text":"","title":"Source"},{"location":"api/2.0.0/#email-source","text":"The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. [JavaMail Reference Implementation - IMAP Store](https://javaee.github.io/javamail/IMAP-Store) [JavaMail Reference Implementation - POP3 Store Store](https://javaee.github.io/javamail/POP3-Store) Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/2.0.1/","text":"API Docs - v2.0.1 Sink email (Sink) The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute. Source email (Source) The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. [JavaMail Reference Implementation - IMAP Store](https://javaee.github.io/javamail/IMAP-Store) [JavaMail Reference Implementation - POP3 Store Store](https://javaee.github.io/javamail/POP3-Store) Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"2.0.1"},{"location":"api/2.0.1/#api-docs-v201","text":"","title":"API Docs - v2.0.1"},{"location":"api/2.0.1/#sink","text":"","title":"Sink"},{"location":"api/2.0.1/#email-sink","text":"The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute.","title":"email (Sink)"},{"location":"api/2.0.1/#source","text":"","title":"Source"},{"location":"api/2.0.1/#email-source","text":"The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. [JavaMail Reference Implementation - IMAP Store](https://javaee.github.io/javamail/IMAP-Store) [JavaMail Reference Implementation - POP3 Store Store](https://javaee.github.io/javamail/POP3-Store) Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/2.0.2/","text":"API Docs - v2.0.2 Sink email (Sink) The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute. Source email (Source) The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. [JavaMail Reference Implementation - IMAP Store](https://javaee.github.io/javamail/IMAP-Store) [JavaMail Reference Implementation - POP3 Store Store](https://javaee.github.io/javamail/POP3-Store) Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"2.0.2"},{"location":"api/2.0.2/#api-docs-v202","text":"","title":"API Docs - v2.0.2"},{"location":"api/2.0.2/#sink","text":"","title":"Sink"},{"location":"api/2.0.2/#email-sink","text":"The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute.","title":"email (Sink)"},{"location":"api/2.0.2/#source","text":"","title":"Source"},{"location":"api/2.0.2/#email-source","text":"The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. [JavaMail Reference Implementation - IMAP Store](https://javaee.github.io/javamail/IMAP-Store) [JavaMail Reference Implementation - POP3 Store Store](https://javaee.github.io/javamail/POP3-Store) Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/2.0.3/","text":"API Docs - v2.0.3 Sink email (Sink) The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute. Source email (Source) The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. [JavaMail Reference Implementation - IMAP Store](https://javaee.github.io/javamail/IMAP-Store) [JavaMail Reference Implementation - POP3 Store Store](https://javaee.github.io/javamail/POP3-Store) Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"2.0.3"},{"location":"api/2.0.3/#api-docs-v203","text":"","title":"API Docs - v2.0.3"},{"location":"api/2.0.3/#sink","text":"","title":"Sink"},{"location":"api/2.0.3/#email-sink","text":"The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute.","title":"email (Sink)"},{"location":"api/2.0.3/#source","text":"","title":"Source"},{"location":"api/2.0.3/#email-source","text":"The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. [JavaMail Reference Implementation - IMAP Store](https://javaee.github.io/javamail/IMAP-Store) [JavaMail Reference Implementation - POP3 Store Store](https://javaee.github.io/javamail/POP3-Store) Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/2.0.4/","text":"API Docs - v2.0.4 Tested Siddhi Core version: 5.1.5 It could also support other Siddhi Core minor versions. Sink email (Sink) The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute. Source email (Source) The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. JavaMail Reference Implementation - IMAP Store JavaMail Reference Implementation - POP3 Store Store Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"2.0.4"},{"location":"api/2.0.4/#api-docs-v204","text":"Tested Siddhi Core version: 5.1.5 It could also support other Siddhi Core minor versions.","title":"API Docs - v2.0.4"},{"location":"api/2.0.4/#sink","text":"","title":"Sink"},{"location":"api/2.0.4/#email-sink","text":"The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute.","title":"email (Sink)"},{"location":"api/2.0.4/#source","text":"","title":"Source"},{"location":"api/2.0.4/#email-source","text":"The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. JavaMail Reference Implementation - IMAP Store JavaMail Reference Implementation - POP3 Store Store Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/2.0.5/","text":"API Docs - v2.0.5 Tested Siddhi Core version: 5.1.5 It could also support other Siddhi Core minor versions. Sink email (Sink) The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , connection.pool.size= INT , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes connection.pool.size Number of concurrent Email client connections. 1 INT Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute. Source email (Source) The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. JavaMail Reference Implementation - IMAP Store JavaMail Reference Implementation - POP3 Store Store Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"2.0.5"},{"location":"api/2.0.5/#api-docs-v205","text":"Tested Siddhi Core version: 5.1.5 It could also support other Siddhi Core minor versions.","title":"API Docs - v2.0.5"},{"location":"api/2.0.5/#sink","text":"","title":"Sink"},{"location":"api/2.0.5/#email-sink","text":"The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , connection.pool.size= INT , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes connection.pool.size Number of concurrent Email client connections. 1 INT Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute.","title":"email (Sink)"},{"location":"api/2.0.5/#source","text":"","title":"Source"},{"location":"api/2.0.5/#email-source","text":"The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. JavaMail Reference Implementation - IMAP Store JavaMail Reference Implementation - POP3 Store Store Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/2.0.6/","text":"API Docs - v2.0.6 Tested Siddhi Core version: 5.1.13 It could also support other Siddhi Core minor versions. Sink email (Sink) The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , connection.pool.size= INT , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes connection.pool.size Number of concurrent Email client connections. 1 INT Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute. Source email (Source) The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. JavaMail Reference Implementation - IMAP Store JavaMail Reference Implementation - POP3 Store Store Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"2.0.6"},{"location":"api/2.0.6/#api-docs-v206","text":"Tested Siddhi Core version: 5.1.13 It could also support other Siddhi Core minor versions.","title":"API Docs - v2.0.6"},{"location":"api/2.0.6/#sink","text":"","title":"Sink"},{"location":"api/2.0.6/#email-sink","text":"The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , connection.pool.size= INT , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes connection.pool.size Number of concurrent Email client connections. 1 INT Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute.","title":"email (Sink)"},{"location":"api/2.0.6/#source","text":"","title":"Source"},{"location":"api/2.0.6/#email-source","text":"The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. JavaMail Reference Implementation - IMAP Store JavaMail Reference Implementation - POP3 Store Store Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/2.0.7/","text":"API Docs - v2.0.7 Tested Siddhi Core version: 5.1.21 It could also support other Siddhi Core minor versions. Sink email (Sink) The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , connection.pool.size= INT , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes connection.pool.size Number of concurrent Email client connections. 1 INT Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute. Source email (Source) The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. JavaMail Reference Implementation - IMAP Store JavaMail Reference Implementation - POP3 Store Store Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"2.0.7"},{"location":"api/2.0.7/#api-docs-v207","text":"Tested Siddhi Core version: 5.1.21 It could also support other Siddhi Core minor versions.","title":"API Docs - v2.0.7"},{"location":"api/2.0.7/#sink","text":"","title":"Sink"},{"location":"api/2.0.7/#email-sink","text":"The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , connection.pool.size= INT , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes connection.pool.size Number of concurrent Email client connections. 1 INT Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute.","title":"email (Sink)"},{"location":"api/2.0.7/#source","text":"","title":"Source"},{"location":"api/2.0.7/#email-source","text":"The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. JavaMail Reference Implementation - IMAP Store JavaMail Reference Implementation - POP3 Store Store Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/2.0.8/","text":"API Docs - v2.0.8 Tested Siddhi Core version: 5.1.21 It could also support other Siddhi Core minor versions. Sink email (Sink) The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , connection.pool.size= INT , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes connection.pool.size Number of concurrent Email client connections. 1 INT Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute. Source email (Source) The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. JavaMail Reference Implementation - IMAP Store JavaMail Reference Implementation - POP3 Store Store Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"2.0.8"},{"location":"api/2.0.8/#api-docs-v208","text":"Tested Siddhi Core version: 5.1.21 It could also support other Siddhi Core minor versions.","title":"API Docs - v2.0.8"},{"location":"api/2.0.8/#sink","text":"","title":"Sink"},{"location":"api/2.0.8/#email-sink","text":"The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , connection.pool.size= INT , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes connection.pool.size Number of concurrent Email client connections. 1 INT Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute.","title":"email (Sink)"},{"location":"api/2.0.8/#source","text":"","title":"Source"},{"location":"api/2.0.8/#email-source","text":"The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. JavaMail Reference Implementation - IMAP Store JavaMail Reference Implementation - POP3 Store Store Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"},{"location":"api/latest/","text":"API Docs - v2.0.8 Tested Siddhi Core version: 5.1.21 It could also support other Siddhi Core minor versions. Sink email (Sink) The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , connection.pool.size= INT , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes connection.pool.size Number of concurrent Email client connections. 1 INT Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute. Source email (Source) The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. JavaMail Reference Implementation - IMAP Store JavaMail Reference Implementation - POP3 Store Store Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"latest"},{"location":"api/latest/#api-docs-v208","text":"Tested Siddhi Core version: 5.1.21 It could also support other Siddhi Core minor versions.","title":"API Docs - v2.0.8"},{"location":"api/latest/#sink","text":"","title":"Sink"},{"location":"api/latest/#email-sink","text":"The email sink uses the 'smtp' server to publish events via emails. The events can be published in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or in the stream definition. The email sink first checks the stream definition for parameters, and if they are no configured there, it checks the 'deployment.yaml' file. If the parameters are not configured in either place, default values are considered for optional parameters. If you need to configure server system parameters that are not provided as options in the stream definition, then those parameters need to be defined them in the 'deployment.yaml' file under 'email sink properties'. For more information about the SMTP server parameters, see https://javaee.github.io/javamail/SMTP-Transport. Further, some email accounts are required to enable the 'access to less secure apps' option. For gmail accounts, you can enable this option via https://myaccount.google.com/lesssecureapps. Syntax @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , connection.pool.size= INT , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The username of the email account that is used to send emails. e.g., 'abc' is the username of the 'abc@gmail.com' account. STRING No No address The address of the email account that is used to send emails. STRING No No password The password of the email account. STRING No No host The host name of the SMTP server. e.g., 'smtp.gmail.com' is a host name for a gmail account. The default value 'smtp.gmail.com' is only valid if the email account is a gmail account. smtp.gmail.com STRING Yes No port The port that is used to create the connection. '465' the default value is only valid is SSL is enabled. INT Yes No ssl.enable This parameter specifies whether the connection should be established via a secure connection or not. The value can be either 'true' or 'false'. If it is 'true', then the connection is establish via the 493 port which is a secure connection. true BOOL Yes No auth This parameter specifies whether to use the 'AUTH' command when authenticating or not. If the parameter is set to 'true', an attempt is made to authenticate the user using the 'AUTH' command. true BOOL Yes No content.type The content type can be either 'text/plain' or 'text/html'. text/plain STRING Yes No subject The subject of the mail to be send. STRING No Yes to The address of the 'to' recipient. If there are more than one 'to' recipients, then all the required addresses can be given as a comma-separated list. STRING No Yes cc The address of the 'cc' recipient. If there are more than one 'cc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No bcc The address of the 'bcc' recipient. If there are more than one 'bcc' recipients, then all the required addresses can be given as a comma-separated list. None STRING Yes No attachments File paths of the files that need to be attached to the email. These paths should be absolute paths. They can be either directories or files . If the path is to a directory, all the files located at the first level (i.e., not within another sub directory) are attached. None STRING Yes Yes connection.pool.size Number of concurrent Email client connections. 1 INT Yes No System Parameters Name Description Default Value Possible Parameters mail.smtp.ssl.trust If this parameter is se, and a socket factory has not been specified, it enables the use of a MailSSLSocketFactory. If this parameter is set to \" \", all the hosts are trusted. If it is set to a whitespace-separated list of hosts, only those specified hosts are trusted. If not, the hosts trusted depends on the certificate presented by the server. String mail.smtp.connectiontimeout The socket connection timeout value in milliseconds. infinite timeout Any Integer mail.smtp.timeout The socket I/O timeout value in milliseconds. infinite timeout Any Integer mail.smtp.from The email address to use for the SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). Any valid email address mail.smtp.localport The local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class. Any Integer mail.smtp.ehlo If this parameter is set to 'false', you must not attempt to sign in with the EHLO command. true true or false mail.smtp.auth.login.disable If this is set to 'true', it is not allowed to use the 'AUTH LOGIN' command. false true or false mail.smtp.auth.plain.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH PLAIN' command. false true or false mail.smtp.auth.digest-md5.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH DIGEST-MD5' command. false true or false mail.smtp.auth.ntlm.disable If this parameter is set to 'true', it is not allowed to use the 'AUTH NTLM' command false true or false mail.smtp.auth.ntlm.domain The NTLM authentication domain. None The valid NTLM authentication domain name. mail.smtp.auth.ntlm.flags NTLM protocol-specific flags. For more details, see http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags. None Valid NTLM protocol-specific flags. mail.smtp.dsn.notify The NOTIFY option to the RCPT command. None Either 'NEVER', or a combination of 'SUCCESS', 'FAILURE', and 'DELAY' (separated by commas). mail.smtp.dsn.ret The 'RET' option to the 'MAIL' command. None Either 'FULL' or 'HDRS'. mail.smtp.sendpartial If this parameter is set to 'true' and a message is addressed to both valid and invalid addresses, the message is sent with a log that reports the partial failure with a 'SendFailedException' error. If this parameter is set to 'false' (which is default), the message is not sent to any of the recipients when the recipient lists contain one or more invalid addresses. false true or false mail.smtp.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.smtp.sasl.mechanisms Enter a space or a comma-separated list of SASL mechanism names that the system shouldt try to use. None mail.smtp.sasl.authorizationid The authorization ID to be used in the SASL authentication. If no value is specified, the authentication ID (i.e., username) is used. username Valid ID mail.smtp.sasl.realm The realm to be used with the 'DIGEST-MD5' authentication. None mail.smtp.quitwait If this parameter is set to 'false', the 'QUIT' command is issued and the connection is immediately closed. If this parameter is set to 'true' (which is default), the transport waits for the response to the QUIT command. false true or false mail.smtp.reportsuccess If this parameter is set to 'true', the transport to includes an 'SMTPAddressSucceededException' for each address to which the message is successfully delivered. false true or false mail.smtp.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create SMTP sockets. None Socket Factory mail.smtp.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory interface'. This class is used to create SMTP sockets. None mail.smtp.socketFactory.fallback If this parameter is set to 'true', the failure to create a socket using the specified socket factory class causes the socket to be created using the 'java.net.Socket' class. true true or false mail.smtp.socketFactory.port This specifies the port to connect to when using the specified socket factory. 25 Valid port number mail.smtp.ssl.protocols This specifies the SSL protocols that need to be enabled for the SSL connections. None This parameter specifies a whitespace separated list of tokens that are acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. mail.smtp.starttls.enable If this parameter is set to 'true', it is possible to issue the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.smtp.starttls.required If this parameter is set to 'true', it is required to use the 'STARTTLS' command. If the server does not support the 'STARTTLS' command, or if the command fails, the connection method will fail. false true or false mail.smtp.socks.host This specifies the host name of a SOCKS5 proxy server to be used for the connections to the mail server. None mail.smtp.socks.port This specifies the port number for the SOCKS5 proxy server. This needs to be used only if the proxy server is not using the standard port number 1080. 1080 valid port number mail.smtp.auth.ntlm.disable If this parameter is set to 'true', the AUTH NTLM command cannot be issued. false true or false mail.smtp.mailextension The extension string to be appended to the MAIL command. None mail.smtp.userset If this parameter is set to 'true', you should use the 'RSET' command instead of the 'NOOP' command in the 'isConnected' method. In some scenarios, 'sendmail' responds slowly after many 'NOOP' commands. This is avoided by using 'RSET' instead. false true or false Examples EXAMPLE 1 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to publish events via an email sink based on the values provided for the mandatory parameters. As shown in the example, it publishes events from the 'FooStream' in 'json' format as emails to the specified 'to' recipients via the email sink. The email is sent from the 'sender.account@gmail.com' email address via a secure connection. EXAMPLE 2 @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream FooStream (email string, loginId int, name string); This example illustrates how to configure the query parameters and the system parameters in the 'deployment.yaml' file. Corresponding parameters need to be configured under 'email', and namespace:'sink' as follows: siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username: sender's email username address: sender's email address password: sender's email password As shown in the example, events from the FooStream are published in 'json' format via the email sink as emails to the given 'to' recipients. The email is sent from the 'sender.account@gmail.com' address via a secure connection. EXAMPLE 3 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream FooStream (name string, age int, country string); This example illustrates how to publish events via the email sink. Events from the 'FooStream' stream are published in 'xml' format via the email sink as a text/html message and sent to the specified 'to', 'cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value of the 'name' parameter in the corresponding output event. EXAMPLE 4 @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream FooStream (name string, age int, country string, attachments string); This example illustrates how to publish events via the email sink. Here, the email also contains attachments. Events from the FooStream are published in 'xml' format via the email sink as a 'text/html' message to the specified 'to','cc', and 'bcc' recipients via a secure connection. The 'name' namespace in the 'subject' attribute is the value for the 'name' parameter in the corresponding output event. The attachments included in the email message are the local files available in the path specified as the value for the 'attachments' attribute.","title":"email (Sink)"},{"location":"api/latest/#source","text":"","title":"Source"},{"location":"api/latest/#email-source","text":"The 'Email' source allows you to receive events via emails. An 'Email' source can be configured using the 'imap' or 'pop3' server to receive events. This allows you to filter the messages that satisfy the criteria specified under the 'search term' option. The email source parameters can be defined in either the ' SP_HOME /conf/ PROFILE /deployment yaml' file or the stream definition. If the parameter configurations are not available in either place, the default values are considered (i.e., if default values are available). If you need to configure server system parameters that are not provided as options in the stream definition, they need to be defined in the 'deployment yaml' file under 'email source properties'. For more information about 'imap' and 'pop3' server system parameters, see the following. JavaMail Reference Implementation - IMAP Store JavaMail Reference Implementation - POP3 Store Store Syntax @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...))) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic username The user name of the email account. e.g., 'wso2mail' is the username of the 'wso2mail@gmail.com' mail account. STRING No No password The password of the email account STRING No No store The store type that used to receive emails. Possible values are 'imap' and 'pop3'. imap STRING Yes No host The host name of the server (e.g., 'imap.gmail.com' is the host name for a gmail account with an IMAP store.). The default value 'imap.gmail.com' is only valid if the email account is a gmail account with IMAP enabled. If store type is 'imap', then the default value is 'imap.gmail.com'. If the store type is 'pop3', then thedefault value is 'pop3.gmail.com'. STRING Yes No port The port that is used to create the connection. '993', the default value is valid only if the store is 'imap' and ssl-enabled. INT Yes No folder The name of the folder to which the emails should be fetched. INBOX STRING Yes No search.term The option that includes conditions such as key-value pairs to search for emails. In a string search term, the key and the value should be separated by a semicolon (';'). Each key-value pair must be within inverted commas (' '). The string search term can define multiple comma-separated key-value pairs. This string search term currently supports only the 'subject', 'from', 'to', 'bcc', and 'cc' keys. e.g., if you enter 'subject:DAS, from:carbon, bcc:wso2', the search term creates a search term instance that filters emails that contain 'DAS' in the subject, 'carbon' in the 'from' address, and 'wso2' in one of the 'bcc' addresses. The string search term carries out sub string matching that is case-sensitive. If '@' in included in the value for any key other than the 'subject' key, it checks for an address that is equal to the value given. e.g., If you search for 'abc@', the string search terms looks for an address that contains 'abc' before the '@' symbol. None STRING Yes No polling.interval This defines the time interval in seconds at which th email source should poll the account to check for new mail arrivals.in seconds. 600 LONG Yes No action.after.processed The action to be performed by the email source for the processed mail. Possible values are as follows: 'FLAGGED': Sets the flag as 'flagged'. 'SEEN': Sets the flag as 'read'. 'ANSWERED': Sets the flag as 'answered'. 'DELETE': Deletes tha mail after the polling cycle. 'MOVE': Moves the mail to the folder specified in the 'folder.to.move' parameter. If the folder specified is 'pop3', then the only option available is 'DELETE'. NONE STRING Yes No folder.to.move The name of the folder to which the mail must be moved once it is processed. If the action after processing is 'MOVE', it is required to specify a value for this parameter. STRING No No content.type The content type of the email. It can be either 'text/plain' or 'text/html.' text/plain STRING Yes No ssl.enable If this is set to 'true', a secure port is used to establish the connection. The possible values are 'true' and 'false'. true BOOL Yes No System Parameters Name Description Default Value Possible Parameters mail.imap.partialfetch This determines whether the IMAP partial-fetch capability should be used. true true or false mail.imap.fetchsize The partial fetch size in bytes. 16K value in bytes mail.imap.peek If this is set to 'true', the IMAP PEEK option should be used when fetching body parts to avoid setting the 'SEEN' flag on messages. The default value is 'false'. This can be overridden on a per-message basis by the 'setPeek method' in 'IMAPMessage'. false true or false mail.imap.connectiontimeout The socket connection timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.timeout The socket read timeout value in milliseconds. This timeout is implemented by 'java.net.Socket'. infinity timeout Any Integer value mail.imap.writetimeout The socket write timeout value in milliseconds. This timeout is implemented by using a 'java.util.concurrent.ScheduledExecutorService' per connection that schedules a thread to close the socket if the timeout period elapses. Therefore, the overhead of using this timeout is one thread per connection. infinity timeout Any Integer value mail.imap.statuscachetimeout The timeout value in milliseconds for the cache of 'STATUS' command response. 1000ms Time out in miliseconds mail.imap.appendbuffersize The maximum size of a message to buffer in memory when appending to an IMAP folder. None Any Integer value mail.imap.connectionpoolsize The maximum number of available connections in the connection pool. 1 Any Integer value mail.imap.connectionpooltimeout The timeout value in milliseconds for connection pool connections. 45000ms Any Integer mail.imap.separatestoreconnection If this parameter is set to 'true', it indicates that a dedicated store connection needs to be used for store commands. true true or false mail.imap.auth.login.disable If this is set to 'true', it is not possible to use the non-standard 'AUTHENTICATE LOGIN' command instead of the plain 'LOGIN' command. false true or false mail.imap.auth.plain.disable If this is set to 'true', the 'AUTHENTICATE PLAIN' command cannot be used. false true or false mail.imap.auth.ntlm.disable If true, prevents use of the AUTHENTICATE NTLM command. false true or false mail.imap.proxyauth.user If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authentication to log in to the server is carried out using the administrator's credentials. After authentication, the IMAP provider issues the 'PROXYAUTH' command with the user name specified in this property. None Valid string value mail.imap.localaddress The local address (host name) to bind to when creating the IMAP socket. Defaults to the address picked by the Socket class. Valid string value mail.imap.localport The local port number to bind to when creating the IMAP socket. Defaults to the port number picked by the Socket class. Valid String value mail.imap.sasl.enable If this parameter is set to 'true', the system attempts to use the 'javax.security.sasl' package to choose an authentication mechanism for the login. false true or false mail.imap.sasl.mechanisms A list of SASL mechanism names that the system should to try to use. The names can be separated by spaces or commas. None Valid string value mail.imap.sasl.authorizationid The authorization ID to use in the SASL authentication. If this parameter is not set, the authentication ID (username) is used. Valid string value mail.imap.sasl.realm The realm to use with SASL authentication mechanisms that require a realm, such as 'DIGEST-MD5'. None Valid string value mail.imap.auth.ntlm.domain The NTLM authentication domain. None Valid string value The NTLM authentication domain. NTLM protocol-specific flags. None Valid integer value mail.imap.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create IMAP sockets. None Valid SocketFactory mail.imap.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create IMAP sockets. None Valid string mail.imap.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. true true or false mail.imap.socketFactory.port This specifies the port to connect to when using the specified socket factory. If this parameter is not set, the default port is used. 143 Valid Integer mail.imap.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by RFC 2595. false true or false mail.imap.ssl.trust If this parameter is set and a socket factory has not been specified, it enables the use of a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If this parameter specifies list of hosts separated by white spaces, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.imap.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class this class is used to create IMAP SSL sockets. None SSL Socket Factory mail.imap.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create IMAP SSL sockets. None Valid String mail.imap.ssl.socketFactory.port This specifies the port to connect to when using the specified socket factory. the default port 993 is used. valid port number mail.imap.ssl.protocols This specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid string mail.imap.starttls.enable If this parameter is set to 'true', it is possible to use the 'STARTTLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.imap.socks.host This specifies the host name of a 'SOCKS5' proxy server that is used to connect to the mail server. None Valid String mail.imap.socks.port This specifies the port number for the 'SOCKS5' proxy server. This is needed if the proxy server is not using the standard port number 1080. 1080 Valid String mail.imap.minidletime This property sets the delay in milliseconds. 10 milliseconds time in seconds (Integer) mail.imap.enableimapevents If this property is set to 'true', it enables special IMAP-specific events to be delivered to the 'ConnectionListener' of the store. The unsolicited responses received during the idle method of the store are sent as connection events with 'IMAPStore.RESPONSE' as the type. The event's message is the raw IMAP response string. false true or false mail.imap.folder.class The class name of a subclass of 'com.sun.mail.imap.IMAPFolder'. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form 'public MyIMAPFolder'(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public 'MyIMAPFolder'(ListInfo li, IMAPStore store) None Valid String mail.pop3.connectiontimeout The socket connection timeout value in milliseconds. Infinite timeout Integer value mail.pop3.timeout The socket I/O timeout value in milliseconds. Infinite timeout Integer value mail.pop3.message.class The class name of a subclass of 'com.sun.mail.pop3.POP3Message'. None Valid String mail.pop3.localaddress The local address (host name) to bind to when creating the POP3 socket. Defaults to the address picked by the Socket class. Valid String mail.pop3.localport The local port number to bind to when creating the POP3 socket. Defaults to the port number picked by the Socket class. Valid port number mail.pop3.apop.enable If this parameter is set to 'true', use 'APOP' instead of 'USER/PASS' to log in to the 'POP3' server (if the 'POP3' server supports 'APOP'). APOP sends a digest of the password instead of clearing the text password. false true or false mail.pop3.socketFactory If this parameter is set to a class that implements the 'javax.net.SocketFactory' interface, this class is used to create 'POP3' sockets. None Socket Factory mail.pop3.socketFactory.class If this parameter is set, it specifies the name of a class that implements the 'javax.net.SocketFactory' interface. This class is used to create 'POP3' sockets. None Valid String mail.pop3.socketFactory.fallback If this parameter is set to 'true', failure to create a socket using the specified socket factory class results in the socket being created using the 'java.net.Socket' class. false true or false mail.pop3.socketFactory.port This specifies the port to connect to when using the specified socket factory. Default port Valid port number mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', check the server identity as specified by RFC 2595. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to ' ', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. If the parameter is not set to any of the values mentioned above, trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3' SSL sockets. None SSL Socket Factory mail.pop3.ssl.checkserveridentity If this parameter is set to 'true', the system checks the server identity as specified by 'RFC 2595'. false true or false mail.pop3.ssl.trust If this parameter is set and a socket factory has not been specified, it is possible to use a 'MailSSLSocketFactory'. If this parameter is set to '*', all the hosts are trusted. If the parameter is set to a whitespace-separated list of hosts, only those hosts are trusted. Trust depends on the certificate presented by the server. Valid String mail.pop3.ssl.socketFactory If this parameter is set to a class that extends the 'javax.net.ssl.SSLSocketFactory' class, this class is used to create 'POP3 SSL' sockets. None SSL Socket Factory mail.pop3.ssl.socketFactory.class If this parameter is set, it specifies the name of a class that extends the 'javax.net.ssl.SSLSocketFactory' class. This class is used to create 'POP3 SSL' sockets. None Valid String mail.pop3.ssl.socketFactory.p This parameter pecifies the port to connect to when using the specified socket factory. 995 Valid Integer mail.pop3.ssl.protocols This parameter specifies the SSL protocols that are enabled for SSL connections. The property value is a whitespace-separated list of tokens acceptable to the 'javax.net.ssl.SSLSocket.setEnabledProtocols' method. None Valid String mail.pop3.starttls.enable If this parameter is set to 'true', it is possible to use the 'STLS' command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. false true or false mail.pop3.starttls.required If this parameter is set to 'true', it is required to use the 'STLS' command. The connect method fails if the server does not support the 'STLS' command or if the command fails. false true or false mail.pop3.socks.host This parameter specifies the host name of a 'SOCKS5' proxy server that can be used to connect to the mail server. None Valid String mail.pop3.socks.port This parameter specifies the port number for the 'SOCKS5' proxy server. None Valid String mail.pop3.disabletop If this parameter is set to 'true', the 'POP3 TOP' command is not used to fetch message headers. false true or false mail.pop3.forgettopheaders If this parameter is set to 'true', the headers that might have been retrieved using the 'POP3 TOP' command is forgotten and replaced by the headers retrieved when the 'POP3 RETR' command is executed. false true or false mail.pop3.filecache.enable If this parameter is set to 'true', the 'POP3' provider caches message data in a temporary file instead of caching them in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. false true or false mail.pop3.filecache.dir If the file cache is enabled, this property is used to override the default directory used by the JDK for temporary files. None Valid String mail.pop3.cachewriteto This parameter controls the behavior of the 'writeTo' method on a 'POP3' message object. If the parameter is set to 'true', the message content has not been cached yet, and the 'ignoreList' is null, the message is cached before being written. If not, the message is streamed directly to the output stream without being cached. false true or false mail.pop3.keepmessagecontent If this property is set to 'true', a hard reference to the cached content is retained, preventing the memory from being reused until the folder is closed, or until the cached content is explicitly invalidated (using the 'invalidate' method). false true or false Examples EXAMPLE 1 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. In this example, only the required parameters are defined in the stream definition. The default values are taken for the other parameters. The search term is not defined, and therefore, all the new messages in the inbox folder are polled and taken. EXAMPLE 2 @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string); This example illustrates how to receive events in 'xml' format via the email source. The email source polls the mail account every 500 seconds to check whether any new mails have arrived. It processes new mails only if they satisfy the conditions specified for the email search term (the value for 'from' of the email message should be 'from.account@. host name ', and the message should contain 'cc.account' in the cc receipient list and the word 'Stream Processor' in the mail subject). in this example, the action after processing is 'DELETE'. Therefore,after processing the event, corresponding mail is deleted from the mail folder.","title":"email (Source)"}]}